<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.mybatis.mapper.MemberMapper">

	<resultMap type="Member" id="memberResultMap">
		<result property="memberId" 		column="m_id"/>
		<result property="memberPw" 		column="m_pw"/>
		<result property="memberLevel" 		column="m_level"/>
		<result property="memberName" 		column="m_name"/>
		<result property="memberAddr" 		column="m_addr"/>
		<result property="memberEmail" 		column="m_email"/>
		<result property="memberRegDate" 	column="m_reg_date"/>
		<!-- collection 복잡한 맵핑 has many 관계 -->
		<collection property="productList"	ofType="Goods">
			<id 	property="goodsCode"		column="g_code"></id>
			<result property="goodsName"		column="g_name"></result>
			<result property="goodsPrice"		column="g_price"></result>
			<result property="goodsSellerId"	column="g_seller_id"></result>
			<result property="goodsRegDate"		column="g_reg_date"></result>
		</collection>
	</resultMap>
	
	<select id="getLoginHistoryCount" resultType="int">
		SELECT
			count(*)
		FROM
			tb_login;
	</select>
	
	<select id="getLoginHistory" parameterType="map" resultType="map">
		SELECT 
		    login_num     AS loginNum
		   ,login_id      AS loginId
		   ,login_date    AS loginDate
		   ,logout_date   AS logoutDate
		FROM 
		   tb_login
		<if test="rowNum != null and rowPerPage != null">
			LIMIT #{rowNum}, #{rowPerPage}; 	
		</if>
	</select>
	
	
	<delete id="removeOrderBySellerId" parameterType="String">
		DELETE
		   o
		FROM
		   tb_goods AS g
		   INNER JOIN 
		   tb_order AS o
		   ON 
		   g.g_code = o.o_g_code
		WHERE 
		   g.g_seller_id = #{memberId};
	</delete>
	
	<delete id="removeGoods" parameterType="String">
		DELETE
		FROM
			tb_goods
		WHERE 
			g_seller_id = #{memberId}; 
	</delete>
	<delete id="removeOrder" parameterType="String">
		DELETE
		FROM
			tb_order
		WHERE
			o_id = #{memberId};
	</delete>
	<delete id="removeLoginHistory" parameterType="String">
		DELETE
		FROM
			tb_login
		WHERE
			login_id = #{memberId};
	</delete>
	<delete id="removeMember" parameterType="String">
		DELETE
		FROM 
			tb_member
		WHERE
			m_id = #{memberId};
	</delete>
	
	<update id="modifyMember" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" suffixOverrides=",">
			<if test="memberPw != null and memberPw != ''.toString()">
				m_pw = #{memberPw},
			</if>
			<if test="memberLevel != null and memberLevel != ''.toString()">
				m_level = #{memberLevel},
			</if>
			<if test="memberName != null and memberName != ''.toString()">
				m_name = #{memberName},
			</if>
			<if test="memberAddr != null and memberAddr != ''.toString()">
				m_addr = #{memberAddr},
			</if>
			<if test="memberEmail != null and memberEmail != ''.toString()">
				m_email = #{memberEmail},
			</if>
		</trim>
		WHERE
			m_id=#{memberId}
	</update>
	
	<select id="getMemberInfoById" parameterType="String" resultType="Member">
		SELECT 
			  m_id			AS memberId
			, m_pw			AS memberPw
			, m_name		AS memberName
			, m_level		AS memberLevel
			, m_email		AS memberEmail
			, m_addr		AS memberAddr
		FROM 
			tb_member
		WHERE
			m_id = #{memberId};
	</select>
	
	<insert id="addMember" parameterType="Member">
		INSERT INTO tb_member
		(   m_id
		   ,m_pw
		   ,m_name
		   ,m_level
		   ,m_email
		   ,m_addr
		   ,m_reg_date
		) VALUES (
		    #{memberId}
		   ,#{memberPw}
		   ,#{memberName}
		   ,#{memberLevel}
		   ,#{memberEmail}
		   ,#{memberAddr}
		   , CURDATE()
		);	
	</insert>
	
	<select id="getMemberLevelList" resultType="MemberLevel">
		SELECT
		    level_num		AS levelNum
		   ,level_name		AS levelName
		FROM
		   tb_member_level
	</select>
	
	<sql id="getMemberListSql"> 
			  m.m_id
			, m.m_pw
			, m.m_name
			, m.m_level
			, m.m_email
			, m.m_addr
			, m.m_reg_date
			, g.g_code
			, g.g_name
			, g.g_price
			, g.g_reg_date
	</sql>
	
	<select id="getMemberList" resultMap="memberResultMap" parameterType="map" fetchSize="100">
		SELECT
			<include refid="getMemberListSql"></include>
		FROM 
			tb_member as m 
			LEFT JOIN 
			tb_goods as g
			ON
			m.m_id = g.g_seller_id
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="searchKey != null and searchKey != ''.toString() and searchValue != null">
				${searchKey} LIKE CONCAT('%', #{searchValue},'%')
			</if>			
		</trim>	
			
	</select>
	
	
	
	
	
	
	
	
	
</mapper>